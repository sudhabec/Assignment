pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key')
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-key')
        AWS_REGION = 'us-east-1'
        TF_DIR = 'tettaform'
        EC2_USER = 'ec2-user'
        // Remove KEY_PATH if you're using sshagent
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-creds',
                    url: 'https://github.com/sudhabec/Assignment.git',
                    branch: 'main'
            }
        }

        stage('Terraform Init & Apply') {
            steps {
                dir("${TF_DIR}") {
                    sh 'terraform init'
                    sh 'terraform apply -auto-approve'
                }
            }
        }

        stage('Get EC2 Public IP') {
            steps {
                script {
                    def ec2_ip = sh(
                        script: "terraform -chdir=${TF_DIR} output -raw instance_public_ip",
                        returnStdout: true
                    ).trim()
                    env.EC2_IP = ec2_ip
                    echo "Deployed EC2 IP: ${env.EC2_IP}"
                }
            }
        }

        stage('Run Tests') {
            steps {
                sh 'bash tests/test.sh'
            }
        }

        stage('Deploy Web App') {
            steps {
                sshagent(['aws-ssh-key']) {
                    sh """
                        scp -o StrictHostKeyChecking=no web-app/index.html ${EC2_USER}@${EC2_IP}:/tmp/index.html
                        ssh -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_IP} "sudo mv /tmp/index.html /usr/share/nginx/html/index.html"
                    """
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
